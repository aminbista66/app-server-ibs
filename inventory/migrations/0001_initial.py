# Generated by Django 4.2.1 on 2023-07-05 08:01

import common.utils
from django.db import migrations, models
import django.db.models.deletion
import fiscalyear.utils
import inventory.utils


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('companyinfo', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fiscal_year', models.CharField(max_length=10, validators=[fiscalyear.utils.validate_fiscal_year])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=15)),
                ('description', models.CharField(blank=True, max_length=300, null=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='companyinfo.companyinfo')),
            ],
            options={
                'verbose_name_plural': 'inventory categories',
            },
        ),
        migrations.CreateModel(
            name='InventoryItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fiscal_year', models.CharField(max_length=10, validators=[fiscalyear.utils.validate_fiscal_year])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=inventory.utils.get_upload_folder, validators=[common.utils.image_validate])),
                ('name', models.CharField(max_length=150)),
                ('reorder_threshold', models.PositiveIntegerField()),
                ('unit_price', models.DecimalField(decimal_places=4, default='0.0000', max_digits=12)),
                ('product_code', models.CharField(max_length=100)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=15)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='companyinfo.companyinfo')),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='inventory.inventorycategory')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SubStore',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='companyinfo.companyinfo')),
            ],
            options={
                'verbose_name': 'sub-store',
                'verbose_name_plural': 'sub-stores',
            },
        ),
        migrations.CreateModel(
            name='SubInventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=4, default='0.0000', max_digits=12)),
                ('total_deduction', models.DecimalField(decimal_places=4, default='0.0000', max_digits=12)),
                ('item', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='inventory.inventoryitem')),
                ('sub_store', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='inventory.substore')),
            ],
            options={
                'verbose_name': 'sub-inventory',
                'verbose_name_plural': 'sub-inventories',
                'unique_together': {('sub_store', 'item')},
            },
        ),
        migrations.CreateModel(
            name='MeasurementUnit',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fiscal_year', models.CharField(max_length=10, validators=[fiscalyear.utils.validate_fiscal_year])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('name', models.CharField(max_length=100)),
                ('code', models.CharField(max_length=15)),
                ('status', models.CharField(choices=[('active', 'Active'), ('inactive', 'Inactive')], default='active', max_length=15)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='companyinfo.companyinfo')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.AddField(
            model_name='inventoryitem',
            name='measurement_unit',
            field=models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='inventory.measurementunit'),
        ),
        migrations.CreateModel(
            name='Inventory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fiscal_year', models.CharField(max_length=10, validators=[fiscalyear.utils.validate_fiscal_year])),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quantity', models.DecimalField(decimal_places=4, default=0.0, max_digits=12)),
                ('purchased_stock', models.PositiveIntegerField(default=0)),
                ('branch', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, to='companyinfo.companyinfo')),
                ('item', models.OneToOneField(on_delete=django.db.models.deletion.RESTRICT, to='inventory.inventoryitem')),
                ('sub_inventories', models.ManyToManyField(to='inventory.subinventory')),
            ],
            options={
                'verbose_name_plural': 'inventories',
            },
        ),
    ]
